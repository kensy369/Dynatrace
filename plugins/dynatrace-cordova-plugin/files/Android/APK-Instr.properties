###############################################################################
# enables/disables the injection of the agent startup call into the method Application#onCreate. If the injection is disabled,
# then the startup call Dynatrace#startup MUST be manually called in the Application#onCreate method.
#DTXAutoStart=false
###############################################################################
# Define the mandatory start-up parameters that are required for the auto-injected Dynatrace#startup call.
# When the property DTXAutoStart is disabled, then the properties DTXApplicationID and DTXAgentStartupPath are NOT required.
DTXApplicationID=YourUniqueAppId
DTXAgentStartupPath=http://host:port

###############################################################################
# Define your SSL settings if applicable. If SSL is used,
# be sure to specify https in the agentPath property above.

#DTXAllowAnyCert=true


###############################################################################
# Crash reporting settings. By default crash data reporting is enabled. See
# Dynatrace.enableCrashReporting(boolean enable)

#DTXCrashReportingEnabled=false

#DTXInstrumentLifecycleMonitoring=false


###############################################################################
# By default all packages are instrumented for web request tagging and timing to provide
# visibility into 3rd party web requests. This property and DTXIncludePackages
# and DTXExcludePackages can be combined to fine tune the package instrumentation.
#
# For example, DTXIncludeAllPackages=true & DTXExcludePackages=a.b
# would include all packages but "a.b".
#
# DTXIncludeAllPackages=false & DTXIncludePackages=a.b would only include "a.b".

#DTXIncludeAllPackages=false

# Add other packages if desired - use a comma as the separator.

#DTXIncludePackages=com.this.pkg,com.that.pkg

# Add packages, classes or methods to be excluded from instrumentation - use a comma as
# the separator.

#DTXExcludePackages=com.xyz.IncludedClass.excludeThisMethod,com.xyz.ExcludedClass


###############################################################################
# Control whether to instrument for automatic user actions and how long before
# those actions stop accepting child events (web requests and user actions).
# By default, the instrumentation is on and the action time out is 500ms. The
# allowable values are between 100 - 5000ms.

#DTXInstrumentAutoUserAction=false
#DTXAutoActionTimeoutMilliseconds=1000

# Set the maximum duration of an automatically created user action. After
# autoActionTimeoutMs expires, the action waits for any outstanding web requests
# or child actions up to this amount of time since the action is created. After
# this time, actions will be automatically closed. Valid range is 100ms-540000ms.
# The default is 60000ms.

#DTXAutoActionMaxDurationMilliseconds=30000

# By default, empty actions with no child (web requests or actions) events are
# not transmitted.

#DTXSendEmptyAutoAction=true


###############################################################################
# Define other runtime options
# Logging level: "info" (default) or "debug". Note that the logging level is
# applied to both Auto Instrumentation as well as the instrumented application.

#DTXLogLevel=debug


###############################################################################
# Define the new version code and name for AndroidManifest.xml. The new version is
# required if Google Play is to be refreshed with the newly instrumented application.
# By default, Auto Instrumentation does change the version code and name. What's
# the difference between the version code and name? Read more here:
# http://developer.android.com/guide/topics/manifest/manifest-element.html#vcode

#DTXVersionCode=1
#DTXVersionName=1.0

###############################################################################
# Control whether to catch location updates from implementations of LocationListener
# When the onLocationChanged callback is triggered, the GPS location will be stored
# with a course precision (xx.yyy)
# Note: your application is responsible for requesting location permissions and
# implementing the listener.

#DTXInstrumentGPSLocation=true


###############################################################################
# Web request tagging is required (forced on) if web request timing is on.

#DTXInstrumentWebRequestTagging=false
#DTXInstrumentWebRequestTiming=false


###############################################################################
# For hybrid applications using the Javascript agent or Javascript bridge, cookies
# need to be set for each instrumented domain or server the app communicates with.
#
# Domain cookies are set with a preceding dot, i.e.: .company.com is used to
# set a cookie for every server on that domain.
#
# Subdomains are set the same way: .subdomain.company.com would set cookies for
# servers in that subdomain.
#
# Specific hosts are addressed directly: host.company.com
# IP addresses are handled directly, the same way as hosts: 192.168.0.1

#DTXSetCookiesForDomain=.domain.com, .subdomain.company.com, host.company.com, 192.168.0.1


###############################################################################
# For hybrid applications set this property to true. It will establish the 
# collaboration between the mobile agent and the JavaScript agent contained in a webview. 

#DTXHybridApplication=true


###############################################################################
# MultiDex properties
#
# For multidex applications control the class moving process for the primary dex file

# Add packages or classes to the internal main dex list - use a comma as the separator.
# Dependencies of the provided classes/packages are resolved and added to the
# internal main dex list
#DTXMultiDexKeep=com.example.*, com.example2.Foo

# Add a list of classes from a file (use slashes or double backslashes) to the
# internal main dex list. The file must contain one class per line, in the
# following format: com/example/Foo.class
# It is possible to use the "maindexlist.txt" file from your Android Studio build.
#DTXMultiDexKeepFile=<path_to_project>/<project>/<module>/build/intermediates/multi-dex/<build_variant>/maindexlist.txt

# Reduce the max amount of methods, that are stored in the primary dex file
# (the value must be smaller than 65536). Define a negative value to generate
# a primary dex file with the minimal number of methods (for testing purposes).
#DTXPrimaryDexLimit=60000

# Reduce the max amount of methods, that are stored in a secondary dex file
# (the value must be smaller than 65536).
#DTXSecondaryDexLimit=64000


###############################################################################
# For GDPR you can activate the user optin feature with the property DTXUserOptIn.
# The flag allows you to set the data collection level (in the source code)
# based on the decision of the user.
#DTXUserOptIn=true
